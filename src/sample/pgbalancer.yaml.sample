# pgbalancer Configuration File
# YAML Format - Version 1.0.0
# 
# Copyright (c) 2003-2021 PgPool Global Development Group
# Copyright (c) 2025 pgElephant
#
# Documentation: https://pgelephant.github.io/pgbalancer/
# Management: Use 'bctl' utility for REST API operations

---
# Clustering Configuration
clustering:
  mode: streaming_replication
  # Options: streaming_replication, native_replication, logical_replication, 
  #          slony, raw, snapshot_isolation

# Network Configuration
network:
  listen_addresses: localhost
  port: 9999
  socket_dir: /tmp
  unix_socket_group: ''
  unix_socket_permissions: 0777

# Connection Pool Settings
connection_pool:
  num_init_children: 32        # Number of pre-forked child processes
  max_pool: 4                  # Pools per child process
  child_life_time: 300         # Child process lifetime (seconds)
  child_max_connections: 0     # Max connections per child (0 = unlimited)
  connection_life_time: 0      # Connection lifetime (seconds, 0 = unlimited)
  client_idle_limit: 0         # Client idle timeout (seconds, 0 = unlimited)
  connection_cache: on         # Enable connection caching
  reset_query_list: 'ABORT; DISCARD ALL'

# Authentication
authentication:
  enable_pool_hba: off
  pool_passwd: pool_passwd
  authentication_timeout: 60
  allow_clear_text_frontend_auth: off
  ssl: off
  # ssl_cert: server.crt
  # ssl_key: server.key
  # ssl_ca_cert: root.crt
  # ssl_ca_cert_dir: ''

# Logging Configuration
logging:
  destination: stderr          # stderr, syslog
  line_prefix: '%t: pid %p: '  # Log line prefix format
  connections: off             # Log connections
  hostname: off                # Log client hostnames
  statement: off               # Log SQL statements
  per_node_statement: off      # Log statements per backend node
  client_messages: off         # Log client messages
  standby_delay: 'none'        # Log standby delay (none, always, if_over_threshold)
  
  # Syslog settings
  syslog_facility: LOCAL0
  syslog_ident: pgbalancer
  
  # File paths
  pid_file_name: /var/run/pgbalancer/pgbalancer.pid
  logdir: /tmp

# Load Balancing
load_balancing:
  mode: on                     # Enable load balancing
  ignore_leading_white_space: on
  read_only_function_list: ''
  write_function_list: ''
  primary_routing_query_pattern_list: ''
  database_redirect_preference_list: ''
  app_name_redirect_preference_list: ''
  allow_sql_comments: off
  disable_load_balance_on_write: transaction  # transaction, trans_transaction, always, dml_adaptive, off
  statement_level_load_balance: off
  dml_adaptive_object_relationship_list: ''
  
  # Function lists for query routing
  black_function_list: 'currval,lastval,nextval,setval'
  black_query_pattern_list: ''
  white_function_list: ''
  white_query_pattern_list: ''

# Replication Settings
replication:
  mode: off                    # Enable main/replica mode
  sub_mode: stream             # stream or logical
  check_period: 10             # Streaming replication check interval
  check_user: postgres
  check_password: ''
  check_database: postgres
  delay_threshold: 0           # Replication delay threshold (bytes)
  prefer_lower_delay_standby: off

# Health Check
health_check:
  period: 0                    # Health check interval (0 = disabled)
  timeout: 20                  # Health check timeout
  user: nobody
  password: ''
  database: ''
  max_retries: 0
  retry_delay: 1
  connect_timeout: 10000

# Failover and Failback
failover:
  command: ''                  # Script to run on failover
  on_backend_error: on         # Trigger failover on backend errors
  detach_false_primary: off    # Detach false primary nodes
  search_primary_node_timeout: 300
  
  failback:
    command: ''                # Script to run on failback
    auto_failback: off         # Enable automatic failback
    interval: 60               # Auto failback interval

# Online Recovery
recovery:
  user: nobody
  password: ''
  first_stage_command: ''
  second_stage_command: ''
  timeout: 90
  client_idle_limit_in_recovery: 0

# Watchdog (High Availability)
watchdog:
  enabled: off
  trusted_servers: ''
  ping_path: /bin
  priority: 1
  authkey: ''
  ipc_socket_dir: /tmp
  
  # Virtual IP settings
  delegate_ip: ''
  if_cmd_path: /sbin
  if_up_cmd: 'ip addr add $_IP_$/24 dev eth0 label eth0:0'
  if_down_cmd: 'ip addr del $_IP_$/24 dev eth0'
  arping_path: /usr/sbin
  arping_cmd: 'arping -U $_IP_$ -w 1 -I eth0'
  
  # Escalation
  clear_memqcache_on_escalation: on
  escalation_command: ''
  de_escalation_command: ''
  
  # Monitoring
  monitoring_interfaces_list: ''
  lifecheck_method: heartbeat  # heartbeat or query
  interval: 10
  heartbeat_port: 9694
  heartbeat_keepalive: 2
  heartbeat_deadtime: 30

# Query Cache (In-Memory Result Cache)
query_cache:
  enabled: off
  method: shmem                # shmem or memcached
  
  # Memcached settings
  memcached_host: localhost
  memcached_port: 11211
  
  # Cache sizing
  total_size: 67108864         # 64MB
  max_num_cache: 1000000
  expire: 0                    # Cache expiration (0 = no expiration)
  auto_cache_invalidation: on
  maxcache: 409600             # Max cached query size
  cache_block_size: 1048576    # 1MB
  
  # Cache directory
  oiddir: /var/log/pgbalancer/oiddir
  
  # Table lists
  white_memqcache_table_list: ''
  black_memqcache_table_list: ''

# Backend PostgreSQL Nodes
# Define your PostgreSQL backend servers here
backends:
  # Backend 0 (Primary/Master)
  - hostname: localhost
    port: 5432
    weight: 1
    data_directory: /var/lib/pgsql/17/data
    flag: ALLOW_TO_FAILOVER
    application_name: server0
    
    # Health check (per backend)
    health_check:
      period: 0
      timeout: 20
      user: nobody
      password: ''
      database: ''
      max_retries: 0
      retry_delay: 1
      connect_timeout: 10000
  
  # Backend 1 (Standby/Replica) - Uncomment to enable
  # - hostname: localhost
  #   port: 5433
  #   weight: 1
  #   data_directory: /var/lib/pgsql/17/data
  #   flag: ALLOW_TO_FAILOVER
  #   application_name: server1
  #   health_check:
  #     period: 0
  #     timeout: 20
  #     user: nobody
  #     password: ''
  #     database: ''
  #     max_retries: 0
  #     retry_delay: 1
  #     connect_timeout: 10000
  
  # Backend 2 (Standby/Replica) - Uncomment to enable
  # - hostname: localhost
  #   port: 5434
  #   weight: 1
  #   data_directory: /var/lib/pgsql/17/data
  #   flag: ALLOW_TO_FAILOVER
  #   application_name: server2

# Watchdog Other Nodes (for HA cluster)
watchdog_nodes:
  # Other watchdog node 0 - Uncomment for multi-node watchdog
  # - hostname: host0_ip
  #   port: 9000
  #   priority: 1
  
  # Other watchdog node 1
  # - hostname: host1_ip
  #   port: 9000
  #   priority: 1

# Watchdog Heartbeat Destinations
heartbeat_destinations:
  # Destination 0
  # - address: host0_ip1
  #   port: 9694
  #   device: ''
  
  # Destination 1
  # - address: host1_ip1
  #   port: 9694
  #   device: ''

# Advanced Settings
advanced:
  # Memory and performance
  memqcache_oiddir: /var/log/pgbalancer/oiddir
  
  # Debug and development
  log_error_verbosity: default  # terse, default, verbose
  client_min_messages: notice
  log_min_messages: warning
  
  # Process management
  serialize_accept: off
  backend_clustering_mode: streaming_replication
